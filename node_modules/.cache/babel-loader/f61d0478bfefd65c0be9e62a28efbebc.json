{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore'; // Your web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBj-Yk5H75xAURMlGcb9un9L17hE6kja4Y\",\n  authDomain: \"crown-2f584.firebaseapp.com\",\n  projectId: \"crown-2f584\",\n  storageBucket: \"crown-2f584.appspot.com\",\n  messagingSenderId: \"541524286340\",\n  appId: \"1:541524286340:web:1f46fc017e33dede119bd1\"\n}; // Initialize Firebase\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async userAuth => {\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  console.log(userDocRef);\n  const userSnapShot = await getDoc(userDocRef);\n  console.log(userSnapShot.exists());\n\n  if (!userSnapShot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return userDocRef;\n};","map":{"version":3,"sources":["/Users/robhyrk/Documents/dev/crwn-clothing-v2/src/utils/firebase/firebase.utils.jsx"],"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","createUserDocumentFromAuth","userAuth","userDocRef","uid","console","log","userSnapShot","exists","displayName","email","createdAt","Date","err"],"mappings":"AAAA;AACA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,OAAT,EAAkBC,kBAAlB,EAAsCC,eAAtC,EAAuDC,kBAAvD,QAAiF,eAAjF;AACA,SAAQC,YAAR,EAAsBC,GAAtB,EAA2BC,MAA3B,EAAmCC,MAAnC,QAAgD,oBAAhD,C,CAEA;;AACA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,6BAFS;AAGrBC,EAAAA,SAAS,EAAE,aAHU;AAIrBC,EAAAA,aAAa,EAAE,yBAJM;AAKrBC,EAAAA,iBAAiB,EAAE,cALE;AAMrBC,EAAAA,KAAK,EAAE;AANc,CAAvB,C,CASA;;AACA,MAAMC,WAAW,GAAGhB,aAAa,CAACS,cAAD,CAAjC;AAEA,MAAMQ,cAAc,GAAG,IAAIb,kBAAJ,EAAvB;AACAc,QAAQ,CAACC,mBAAT,CAA6B;AACzBC,EAAAA,MAAM,EAAE;AADiB,CAA7B;AAIA,OAAO,MAAMC,IAAI,GAAGpB,OAAO,EAApB;AACP,OAAO,MAAMqB,qBAAqB,GAAG,MAAMnB,eAAe,CAACkB,IAAD,EAAOJ,cAAP,CAAnD;AACP,OAAO,MAAOM,wBAAwB,GAAG,MAAMrB,kBAAkB,CAACmB,IAAD,EAAOJ,cAAP,CAA1D;AAEP,OAAO,MAAMO,EAAE,GAAGnB,YAAY,EAAvB;AAEP,OAAO,MAAMoB,0BAA0B,GAAG,MAAOC,QAAP,IAAoB;AAC1D,QAAMC,UAAU,GAAGrB,GAAG,CAACkB,EAAD,EAAK,OAAL,EAAcE,QAAQ,CAACE,GAAvB,CAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACA,QAAMI,YAAY,GAAG,MAAMxB,MAAM,CAACoB,UAAD,CAAjC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,MAAb,EAAZ;;AACA,MAAG,CAACD,YAAY,CAACC,MAAb,EAAJ,EAA0B;AACtB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAuBR,QAA7B;AACA,UAAMS,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACA,YAAM5B,MAAM,CAACmB,UAAD,EAAa;AACrBM,QAAAA,WADqB;AAErBC,QAAAA,KAFqB;AAGrBC,QAAAA;AAHqB,OAAb,CAAZ;AAKH,KAND,CAME,OAAME,GAAN,EAAW;AACTR,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACH;AACJ;;AAED,SAAOV,UAAP;AACH,CApBM","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider } from 'firebase/auth'\nimport {getFirestore, doc, getDoc, setDoc} from 'firebase/firestore'\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBj-Yk5H75xAURMlGcb9un9L17hE6kja4Y\",\n  authDomain: \"crown-2f584.firebaseapp.com\",\n  projectId: \"crown-2f584\",\n  storageBucket: \"crown-2f584.appspot.com\",\n  messagingSenderId: \"541524286340\",\n  appId: \"1:541524286340:web:1f46fc017e33dede119bd1\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst googleProvider = new GoogleAuthProvider()\nprovider.setCustomParameters({\n    prompt: \"select_account\"\n})\n\nexport const auth = getAuth()\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider)\nexport const  signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider)\n\nexport const db = getFirestore()\n\nexport const createUserDocumentFromAuth = async (userAuth) => {\n    const userDocRef = doc(db, 'users', userAuth.uid)\n    console.log(userDocRef)\n    const userSnapShot = await getDoc(userDocRef)\n    console.log(userSnapShot.exists())\n    if(!userSnapShot.exists()){\n        const {displayName, email} = userAuth\n        const createdAt = new Date()\n        try {\n            await setDoc(userDocRef, {\n                displayName,\n                email, \n                createdAt\n            })\n        } catch(err) {\n            console.log(err)\n        }\n    }\n\n    return userDocRef\n}"]},"metadata":{},"sourceType":"module"}