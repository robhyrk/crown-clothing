{"ast":null,"code":"// import {createContext, useEffect, useReducer} from 'react'\n// import { onAuthStateChangedListener, createUserDocumentFromAuth } from '../utils/firebase/firebase.utils'\n// export const UserContext = createContext({\n//     currentUser: null,\n//     setCurrentUser: () => null\n// })\n// const USER_ACTION_TYPES = {\n//     SET_CURRENT_USER: 'SET_CURRENT_USER'\n// }\n// const INITIAL_STATE = {\n//     currentUser: null\n// }\n// const userReducer = (state, action) => {\n//     const {type, payload} = action\n//     switch(type) {\n//         case 'SET_CURRENT_USER':\n//             return {\n//                 ...state,\n//                 currentUser: payload\n//             }\n//         default: \n//             throw new Error(`Unhandled type ${type} in userReducer`)\n//     }\n// }\n// export const UserProvider = ({children}) => {\n//     const [{currentUser}, dispatch] = useReducer(userReducer, INITIAL_STATE)\n//     console.log(currentUser)\n//     const setCurrentUser = (user) => {\n//         dispatch({type: USER_ACTION_TYPES.SET_CURRENT_USER, payload: user})\n//     }\n//     const value = {currentUser, setCurrentUser}\n//     return <UserContext.Provider value={value}>{children}</UserContext.Provider>\n// }","map":{"version":3,"sources":["/Users/robhyrk/Documents/dev/courses/crwn-clothing-v2/src/context/user.context.jsx"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["// import {createContext, useEffect, useReducer} from 'react'\n// import { onAuthStateChangedListener, createUserDocumentFromAuth } from '../utils/firebase/firebase.utils'\n\n// export const UserContext = createContext({\n//     currentUser: null,\n//     setCurrentUser: () => null\n// })\n\n// const USER_ACTION_TYPES = {\n//     SET_CURRENT_USER: 'SET_CURRENT_USER'\n// }\n\n// const INITIAL_STATE = {\n//     currentUser: null\n// }\n\n// const userReducer = (state, action) => {\n//     const {type, payload} = action\n//     switch(type) {\n//         case 'SET_CURRENT_USER':\n//             return {\n//                 ...state,\n//                 currentUser: payload\n//             }\n//         default: \n//             throw new Error(`Unhandled type ${type} in userReducer`)\n//     }\n// }\n\n// export const UserProvider = ({children}) => {\n//     const [{currentUser}, dispatch] = useReducer(userReducer, INITIAL_STATE)\n//     console.log(currentUser)\n    \n//     const setCurrentUser = (user) => {\n//         dispatch({type: USER_ACTION_TYPES.SET_CURRENT_USER, payload: user})\n//     }\n//     const value = {currentUser, setCurrentUser}\n\n//     return <UserContext.Provider value={value}>{children}</UserContext.Provider>\n// }"]},"metadata":{},"sourceType":"module"}