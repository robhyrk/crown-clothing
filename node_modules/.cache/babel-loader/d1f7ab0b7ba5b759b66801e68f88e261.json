{"ast":null,"code":"var _jsxFileName = \"/Users/robhyrk/Documents/dev/courses/crwn-clothing-v2/src/context/cart.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...productToAdd,\n    quantity: 1\n  }];\n};\n\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  cartCount: 0\n});\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n  useEffect(() => {\n    const newCartCount = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n    setCartCount(newCartCount);\n  }, [cartItems]);\n\n  const addItemToCart = productToAdd => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    cartItems\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"1STVRVZJMMTq6OZavO9o7qwZdno=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/robhyrk/Documents/dev/courses/crwn-clothing-v2/src/context/cart.context.jsx"],"names":["createContext","useState","useEffect","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","CartContext","isCartOpen","setIsCartOpen","addItemToCart","cartCount","CartProvider","children","setCartItems","setCartCount","newCartCount","reduce","total","value"],"mappings":";;;AAAA,SAAQA,aAAR,EAAuBC,QAAvB,EAAiCC,SAAjC,QAAiD,OAAjD;;;AAEA,MAAMC,WAAW,GAAG,CAACC,SAAD,EAAYC,YAAZ,KAA6B;AAC7C,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAgBC,QAAD,IAAaA,QAAQ,CAACC,EAAT,KAAgBJ,YAAY,CAACI,EAAzD,CAAzB;;AAEA,MAAGH,gBAAH,EAAqB;AACjB,WAAOF,SAAS,CAACM,GAAV,CAAeF,QAAD,IAAaA,QAAQ,CAACC,EAAT,KAAgBJ,YAAY,CAACI,EAA7B,GAC9B,EAAC,GAAGD,QAAJ;AAAcG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA5C,KAD8B,GAE5BH,QAFC,CAAP;AAIH;;AAED,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAC,GAAGC,YAAJ;AAAkBM,IAAAA,QAAQ,EAAE;AAA5B,GAAf,CAAP;AACH,CAXD;;AAaA,OAAO,MAAMC,WAAW,gBAAGZ,aAAa,CAAC;AACrCa,EAAAA,UAAU,EAAE,KADyB;AAErCC,EAAAA,aAAa,EAAE,MAAM,CAAE,CAFc;AAGrCV,EAAAA,SAAS,EAAE,EAH0B;AAIrCW,EAAAA,aAAa,EAAE,MAAM,CAAE,CAJc;AAKrCC,EAAAA,SAAS,EAAE;AAL0B,CAAD,CAAjC;AAQP,OAAO,MAAMC,YAAY,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACxC,QAAM,CAACL,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACG,SAAD,EAAYe,YAAZ,IAA4BlB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACe,SAAD,EAAYI,YAAZ,IAA4BnB,QAAQ,CAAC,CAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,YAAY,GAAGjB,SAAS,CAACkB,MAAV,CAAiB,CAACC,KAAD,EAAQf,QAAR,KAAqBe,KAAK,GAAGf,QAAQ,CAACG,QAAvD,EAAgE,CAAhE,CAArB;AACAS,IAAAA,YAAY,CAACC,YAAD,CAAZ;AACD,GAHQ,EAGN,CAACjB,SAAD,CAHM,CAAT;;AAMA,QAAMW,aAAa,GAAIV,YAAD,IAAkB;AACpCc,IAAAA,YAAY,CAAChB,WAAW,CAACC,SAAD,EAAYC,YAAZ,CAAZ,CAAZ;AACH,GAFD;;AAIA,QAAMmB,KAAK,GAAG;AAACX,IAAAA,UAAD;AAAaC,IAAAA,aAAb;AAA4BC,IAAAA,aAA5B;AAA2CX,IAAAA;AAA3C,GAAd;AAEA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEoB,KAA7B;AAAA,cAAqCN;AAArC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAlBM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import {createContext, useState, useEffect} from 'react'\n\nconst addCartItem = (cartItems, productToAdd) => {\n    const existingCartItem = cartItems.find((cartItem)=> cartItem.id === productToAdd.id)\n\n    if(existingCartItem) {\n        return cartItems.map((cartItem)=> cartItem.id === productToAdd.id ?\n            {...cartItem, quantity: cartItem.quantity + 1}\n            : cartItem\n        )\n    }\n\n    return [...cartItems, {...productToAdd, quantity: 1}]\n}\n\nexport const CartContext = createContext({\n    isCartOpen: false,\n    setIsCartOpen: () => {},\n    cartItems: [],\n    addItemToCart: () => {},\n    cartCount: 0\n})\n\nexport const CartProvider = ({children}) => {\n    const [isCartOpen, setIsCartOpen] = useState(false)\n    const [cartItems, setCartItems] = useState([])\n    const [cartCount, setCartCount] = useState(0)\n\n    useEffect(() => {\n      const newCartCount = cartItems.reduce((total, cartItem) => total + cartItem.quantity,0)\n      setCartCount(newCartCount)\n    }, [cartItems])\n    \n\n    const addItemToCart = (productToAdd) => {\n        setCartItems(addCartItem(cartItems, productToAdd))\n    }\n\n    const value = {isCartOpen, setIsCartOpen, addItemToCart, cartItems}\n\n    return <CartContext.Provider value={value}>{children}</CartContext.Provider>\n}"]},"metadata":{},"sourceType":"module"}