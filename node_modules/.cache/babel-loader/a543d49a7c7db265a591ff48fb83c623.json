{"ast":null,"code":"import { compose, createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga'; // for more customized logging\n// import { loggerMiddleware } from '../middleware/logger'\n\nimport { rootSaga } from './root-saga';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['user']\n};\nconst sagaMiddleware = createSagaMiddleware(); // const persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst middleWares = [process.env.NODE_ENV === 'development' && logger, sagaMiddleware].filter(Boolean); // for more customized logging\n// const middleWares = [process.env.NODE_ENV === 'development' && loggerMiddleware].filter(\n//     Boolean\n// )\n\nconst composedEnhancer = process.env.NODE_ENV !== 'production' && window && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst composedEnhancers = composedEnhancer(applyMiddleware(...middleWares)); //for redux persist for saving in local storage [adjust in index.js as well] \n// export const store = createStore(persistedReducer, undefined, composedEnhancers)\n\nexport const store = createStore(rootSaga, undefined, composedEnhancers);\nsagaMiddleware.run(rootSaga); //for redux persist for saving in local storage\n// export const persistor = persistStore(store)","map":{"version":3,"sources":["/Users/robhyrk/Documents/dev/courses/crwn-clothing-v2/src/store/store.js"],"names":["compose","createStore","applyMiddleware","persistStore","persistReducer","storage","logger","createSagaMiddleware","rootSaga","persistConfig","key","blacklist","sagaMiddleware","middleWares","process","env","NODE_ENV","filter","Boolean","composedEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","composedEnhancers","store","undefined","run"],"mappings":"AAAA,SAAQA,OAAR,EAAiBC,WAAjB,EAA8BC,eAA9B,QAAoD,OAApD;AACA,SAAQC,YAAR,EAAsBC,cAAtB,QAA2C,eAA3C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,YAAjC,C,CACA;AACA;;AAEA,SAAQC,QAAR,QAAuB,aAAvB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBL,EAAAA,OAFkB;AAGlBM,EAAAA,SAAS,EAAE,CAAC,MAAD;AAHO,CAAtB;AAMA,MAAMC,cAAc,GAAGL,oBAAoB,EAA3C,C,CAEA;;AAEA,MAAMM,WAAW,GAAG,CAACC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CV,MAA3C,EAAmDM,cAAnD,EAAmEK,MAAnE,CAChBC,OADgB,CAApB,C,CAGA;AACA;AACA;AACA;;AAEA,MAAMC,gBAAgB,GAAIL,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCI,MAAzC,IAAmDA,MAAM,CAACC,oCAA3D,IAAqGrB,OAA9H;AAEA,MAAMsB,iBAAiB,GAAGH,gBAAgB,CAACjB,eAAe,CAAC,GAAGW,WAAJ,CAAhB,CAA1C,C,CAEA;AACA;;AAEA,OAAO,MAAMU,KAAK,GAAGtB,WAAW,CAACO,QAAD,EAAWgB,SAAX,EAAsBF,iBAAtB,CAAzB;AAEPV,cAAc,CAACa,GAAf,CAAmBjB,QAAnB,E,CAEA;AACA","sourcesContent":["import {compose, createStore, applyMiddleware} from 'redux'\nimport {persistStore, persistReducer} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport logger from 'redux-logger'\nimport createSagaMiddleware from 'redux-saga'\n// for more customized logging\n// import { loggerMiddleware } from '../middleware/logger'\n\nimport {rootSaga} from './root-saga'\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    blacklist: ['user']\n}\n\nconst sagaMiddleware = createSagaMiddleware()\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst middleWares = [process.env.NODE_ENV === 'development' && logger, sagaMiddleware].filter(\n    Boolean\n)\n// for more customized logging\n// const middleWares = [process.env.NODE_ENV === 'development' && loggerMiddleware].filter(\n//     Boolean\n// )\n\nconst composedEnhancer = (process.env.NODE_ENV !== 'production' && window && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ) || compose\n\nconst composedEnhancers = composedEnhancer(applyMiddleware(...middleWares))\n\n//for redux persist for saving in local storage [adjust in index.js as well] \n// export const store = createStore(persistedReducer, undefined, composedEnhancers)\n\nexport const store = createStore(rootSaga, undefined, composedEnhancers)\n\nsagaMiddleware.run(rootSaga)\n\n//for redux persist for saving in local storage\n// export const persistor = persistStore(store)"]},"metadata":{},"sourceType":"module"}