{"ast":null,"code":"var _jsxFileName = \"/Users/robhyrk/Documents/dev/crwn-clothing-v2/src/components/sign-in-form/sign-in-form.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport Button from '../button/button.component';\nimport './sign-in-form.styles.scss';\nimport { signInWithGooglePopup, createUserDocumentFromAuth, signInUserWithEmailAndPassword } from '../../utils/firebase/firebase.utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultFormFields = {\n  email: '',\n  password: ''\n};\n\nconst SignInform = () => {\n  _s();\n\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const {\n    email,\n    password\n  } = formFields;\n\n  const resetFormFields = () => {\n    setFormFields(defaultFormFields);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      const response = await signInUserWithEmailAndPassword(email, password);\n      console.log(response);\n      resetFormFields();\n    } catch (err) {\n      if (err.code === \"auth/wrong-password\") {\n        alert(\"wrong password\");\n      }\n\n      console.log(err);\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormFields({ ...formFields,\n      [name]: value\n    });\n  };\n\n  const signInWithGoogle = async () => {\n    const {\n      user\n    } = await signInWithGooglePopup();\n    await createUserDocumentFromAuth(user);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Already have an account?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Email\",\n        type: \"email\",\n        required: true,\n        name: \"email\",\n        onChange: handleChange,\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Password\",\n        type: \"password\",\n        required: true,\n        name: \"password\",\n        onChange: handleChange,\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          buttonType: \"google\",\n          onClick: signInWithGoogle,\n          type: \"submit\",\n          children: \"Google Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignInform, \"BSTP5B8VO6H/Fwu712VTuD9hH54=\");\n\n_c = SignInform;\nexport default SignInform;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInform\");","map":{"version":3,"sources":["/Users/robhyrk/Documents/dev/crwn-clothing-v2/src/components/sign-in-form/sign-in-form.component.jsx"],"names":["useState","FormInput","Button","signInWithGooglePopup","createUserDocumentFromAuth","signInUserWithEmailAndPassword","defaultFormFields","email","password","SignInform","formFields","setFormFields","resetFormFields","handleSubmit","event","preventDefault","response","console","log","err","code","alert","handleChange","name","value","target","signInWithGoogle","user"],"mappings":"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","sourcesContent":["import {useState} from 'react'\nimport FormInput from '../form-input/form-input.component'\nimport Button from '../button/button.component'\nimport './sign-in-form.styles.scss'\nimport { signInWithGooglePopup, createUserDocumentFromAuth, signInUserWithEmailAndPassword } from '../../utils/firebase/firebase.utils'\n\nconst defaultFormFields = {\n    email: '',\n    password: '',\n}\n\nconst SignInform = () => {\n\n    const [formFields, setFormFields] = useState(defaultFormFields)\n    const {email, password} = formFields\n\n    const resetFormFields = () => {\n        setFormFields(defaultFormFields)\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n\n        try {\n            const response = await signInUserWithEmailAndPassword (email, password)\n            console.log(response)\n            resetFormFields()\n        } catch(err) {\n            if(err.code === \"auth/wrong-password\") {\n                alert(\"wrong password\")\n            }\n            console.log(err)\n        }\n    }\n    \n    const handleChange = (event) => {\n        const {name, value} = event.target\n\n        setFormFields({...formFields, [name]:value})\n    }\n\n    const signInWithGoogle = async () => {\n        const {user} = await signInWithGooglePopup()\n        await createUserDocumentFromAuth(user)\n    }\n\n    return(\n        <div className='sign-up-container'>\n            <h2>Already have an account?</h2>\n            <span>Sign in with your email and password</span>\n            <form onSubmit={handleSubmit}>\n                <FormInput label=\"Email\"  type=\"email\" required name=\"email\" onChange={handleChange} value={email}/>\n                \n                <FormInput label=\"Password\"  type=\"password\" required name=\"password\" onChange={handleChange} value={password}/>\n                <div className='button-container'>\n                    <Button type=\"submit\">Sign In</Button>\n                    <Button buttonType='google' onClick={signInWithGoogle} type=\"submit\">Google Sign In</Button>\n                </div>        \n            </form>\n        </div>\n    )\n}\n\nexport default SignInform"]},"metadata":{},"sourceType":"module"}