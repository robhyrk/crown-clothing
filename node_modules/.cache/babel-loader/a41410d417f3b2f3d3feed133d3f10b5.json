{"ast":null,"code":"import { compose, createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport { rootReducer } from './root-reducer'; // const loggerMiddleware = (store) => (next) => (action) => {\n//     if (!action.type) {\n//       return next(action);\n//     }\n//     console.log('type: ', action.type);\n//     console.log('payload: ', action.payload);\n//     console.log('currentState: ', store.getState());\n//     next(action);\n//     console.log('next state: ', store.getState());\n// };\n\nconst middleWares = [logger]; // const middleWares = [loggerMiddleware];\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['user']\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst composedEnhancers = compose(applyMiddleware(...middleWares));\nexport const store = createStore(persistedReducer, undefined, composedEnhancers);\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/Users/robhyrk/Documents/dev/courses/crwn-clothing-v2/src/store/store.js"],"names":["compose","createStore","applyMiddleware","persistStore","persistReducer","storage","logger","rootReducer","middleWares","persistConfig","key","blacklist","persistedReducer","composedEnhancers","store","undefined","persistor"],"mappings":"AAAA,SAAQA,OAAR,EAAiBC,WAAjB,EAA8BC,eAA9B,QAAoD,OAApD;AACA,SAAQC,YAAR,EAAsBC,cAAtB,QAA2C,eAA3C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,SAAQC,WAAR,QAA0B,gBAA1B,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;;AAEA,MAAMC,WAAW,GAAG,CAACF,MAAD,CAApB,C,CACA;;AAEA,MAAMG,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBL,EAAAA,OAFkB;AAGlBM,EAAAA,SAAS,EAAE,CAAC,MAAD;AAHO,CAAtB;AAMA,MAAMC,gBAAgB,GAAGR,cAAc,CAACK,aAAD,EAAgBF,WAAhB,CAAvC;AAEA,MAAMM,iBAAiB,GAAGb,OAAO,CAACE,eAAe,CAAC,GAAGM,WAAJ,CAAhB,CAAjC;AAEA,OAAO,MAAMM,KAAK,GAAGb,WAAW,CAACW,gBAAD,EAAmBG,SAAnB,EAA8BF,iBAA9B,CAAzB;AAEP,OAAO,MAAMG,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B","sourcesContent":["import {compose, createStore, applyMiddleware} from 'redux'\nimport {persistStore, persistReducer} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport logger from 'redux-logger'\n\nimport {rootReducer} from './root-reducer'\n\n// const loggerMiddleware = (store) => (next) => (action) => {\n//     if (!action.type) {\n//       return next(action);\n//     }\n  \n//     console.log('type: ', action.type);\n//     console.log('payload: ', action.payload);\n//     console.log('currentState: ', store.getState());\n  \n//     next(action);\n  \n//     console.log('next state: ', store.getState());\n// };\n\nconst middleWares = [logger]\n// const middleWares = [loggerMiddleware];\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    blacklist: ['user']\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst composedEnhancers = compose(applyMiddleware(...middleWares))\n\nexport const store = createStore(persistedReducer, undefined, composedEnhancers)\n\nexport const persistor = persistStore(store)"]},"metadata":{},"sourceType":"module"}