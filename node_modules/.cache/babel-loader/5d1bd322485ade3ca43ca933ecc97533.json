{"ast":null,"code":"import { compose, createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport { loggerMiddleware } from '../middleware/logger';\nimport { rootReducer } from './root-reducer';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['user']\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst middleWares = [process.env.NODE_ENV === 'development' && logger]; // const middleWares = [process.env.NODE_ENV === 'development' && loggerMiddleware]\n\nconst composedEnhancers = compose(applyMiddleware(...middleWares));\nexport const store = createStore(persistedReducer, undefined, composedEnhancers);\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/Users/robhyrk/Documents/dev/courses/crwn-clothing-v2/src/store/store.js"],"names":["compose","createStore","applyMiddleware","persistStore","persistReducer","storage","logger","loggerMiddleware","rootReducer","persistConfig","key","blacklist","persistedReducer","middleWares","process","env","NODE_ENV","composedEnhancers","store","undefined","persistor"],"mappings":"AAAA,SAAQA,OAAR,EAAiBC,WAAjB,EAA8BC,eAA9B,QAAoD,OAApD;AACA,SAAQC,YAAR,EAAsBC,cAAtB,QAA2C,eAA3C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AAEA,SAAQC,WAAR,QAA0B,gBAA1B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBL,EAAAA,OAFkB;AAGlBM,EAAAA,SAAS,EAAE,CAAC,MAAD;AAHO,CAAtB;AAMA,MAAMC,gBAAgB,GAAGR,cAAc,CAACK,aAAD,EAAgBD,WAAhB,CAAvC;AAEA,MAAMK,WAAW,GAAG,CAACC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CV,MAA3C,CAApB,C,CACA;;AAEA,MAAMW,iBAAiB,GAAGjB,OAAO,CAACE,eAAe,CAAC,GAAGW,WAAJ,CAAhB,CAAjC;AAEA,OAAO,MAAMK,KAAK,GAAGjB,WAAW,CAACW,gBAAD,EAAmBO,SAAnB,EAA8BF,iBAA9B,CAAzB;AAEP,OAAO,MAAMG,SAAS,GAAGjB,YAAY,CAACe,KAAD,CAA9B","sourcesContent":["import {compose, createStore, applyMiddleware} from 'redux'\nimport {persistStore, persistReducer} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport logger from 'redux-logger'\nimport { loggerMiddleware } from '../middleware/logger'\n\nimport {rootReducer} from './root-reducer'\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    blacklist: ['user']\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst middleWares = [process.env.NODE_ENV === 'development' && logger]\n// const middleWares = [process.env.NODE_ENV === 'development' && loggerMiddleware]\n\nconst composedEnhancers = compose(applyMiddleware(...middleWares))\n\nexport const store = createStore(persistedReducer, undefined, composedEnhancers)\n\nexport const persistor = persistStore(store)"]},"metadata":{},"sourceType":"module"}