{"ast":null,"code":"import { compose, createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport { rootReducer } from './root-reducer';\n\nconst loggerMiddleware = store => next => action => {\n  if (!action.type) {\n    return next(action);\n  }\n\n  console.log('type: ', action.type);\n  console.log('payload: ', action.payload);\n  console.log('currentState: ', store.getState());\n  next(action);\n  console.log('next state: ', store.getState());\n};\n\nconst middleWares = [logger]; // const middleWares = [loggerMiddleware];\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['user']\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst composedEnhancers = compose(applyMiddleware(...middleWares));\nexport const store = createStore(persistedReducer, undefined, composedEnhancers);\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/Users/robhyrk/Documents/dev/courses/crwn-clothing-v2/src/store/store.js"],"names":["compose","createStore","applyMiddleware","persistStore","persistReducer","storage","logger","rootReducer","loggerMiddleware","store","next","action","type","console","log","payload","getState","middleWares","persistConfig","key","blacklist","persistedReducer","composedEnhancers","undefined","persistor"],"mappings":"AAAA,SAAQA,OAAR,EAAiBC,WAAjB,EAA8BC,eAA9B,QAAoD,OAApD;AACA,SAAQC,YAAR,EAAsBC,cAAtB,QAA2C,eAA3C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,SAAQC,WAAR,QAA0B,gBAA1B;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAYC,IAAD,IAAWC,MAAD,IAAY;AACtD,MAAI,CAACA,MAAM,CAACC,IAAZ,EAAkB;AAChB,WAAOF,IAAI,CAACC,MAAD,CAAX;AACD;;AAEDE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAM,CAACC,IAA7B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,MAAM,CAACI,OAAhC;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BL,KAAK,CAACO,QAAN,EAA9B;AAEAN,EAAAA,IAAI,CAACC,MAAD,CAAJ;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BL,KAAK,CAACO,QAAN,EAA5B;AACH,CAZD;;AAcA,MAAMC,WAAW,GAAG,CAACX,MAAD,CAApB,C,CACA;;AAEA,MAAMY,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBd,EAAAA,OAFkB;AAGlBe,EAAAA,SAAS,EAAE,CAAC,MAAD;AAHO,CAAtB;AAMA,MAAMC,gBAAgB,GAAGjB,cAAc,CAACc,aAAD,EAAgBX,WAAhB,CAAvC;AAEA,MAAMe,iBAAiB,GAAGtB,OAAO,CAACE,eAAe,CAAC,GAAGe,WAAJ,CAAhB,CAAjC;AAEA,OAAO,MAAMR,KAAK,GAAGR,WAAW,CAACoB,gBAAD,EAAmBE,SAAnB,EAA8BD,iBAA9B,CAAzB;AAEP,OAAO,MAAME,SAAS,GAAGrB,YAAY,CAACM,KAAD,CAA9B","sourcesContent":["import {compose, createStore, applyMiddleware} from 'redux'\nimport {persistStore, persistReducer} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport logger from 'redux-logger'\n\nimport {rootReducer} from './root-reducer'\n\nconst loggerMiddleware = (store) => (next) => (action) => {\n    if (!action.type) {\n      return next(action);\n    }\n  \n    console.log('type: ', action.type);\n    console.log('payload: ', action.payload);\n    console.log('currentState: ', store.getState());\n  \n    next(action);\n  \n    console.log('next state: ', store.getState());\n};\n\nconst middleWares = [logger]\n// const middleWares = [loggerMiddleware];\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    blacklist: ['user']\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst composedEnhancers = compose(applyMiddleware(...middleWares))\n\nexport const store = createStore(persistedReducer, undefined, composedEnhancers)\n\nexport const persistor = persistStore(store)"]},"metadata":{},"sourceType":"module"}