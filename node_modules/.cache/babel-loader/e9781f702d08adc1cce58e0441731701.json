{"ast":null,"code":"var _jsxFileName = \"/Users/robhyrk/Documents/dev/courses/crwn-clothing-v2/src/components/sign-in-form/sign-in-form.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport Button, { BUTTON_TYPES_CLASSES } from '../button/button.component';\nimport './sign-in-form.styles.scss';\nimport { useDispatch } from 'react-redux';\nimport { signInUserWithEmailAndPassword } from '../../utils/firebase/firebase.utils';\nimport { googleSignInStart } from '../../store/user/user.action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultFormFields = {\n  email: '',\n  password: ''\n};\n\nconst SignInform = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const {\n    email,\n    password\n  } = formFields;\n\n  const resetFormFields = () => {\n    setFormFields(defaultFormFields);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      const {\n        user\n      } = await signInUserWithEmailAndPassword(email, password);\n      console.log(user);\n      resetFormFields();\n    } catch (err) {\n      switch (err.code) {\n        case \"auth/wrong-password\":\n          alert(\"incorrect password\");\n          break;\n\n        case \"auth/user-not-found\":\n          alert(\"no user associated with this email\");\n          break;\n\n        default:\n          console.log(err);\n      }\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormFields({ ...formFields,\n      [name]: value\n    });\n  };\n\n  const signInWithGoogle = async () => {\n    dispatch(googleSignInStart());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Already have an account?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Email\",\n        type: \"email\",\n        required: true,\n        name: \"email\",\n        onChange: handleChange,\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Password\",\n        type: \"password\",\n        required: true,\n        name: \"password\",\n        onChange: handleChange,\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: event => handleSubmit(event),\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          buttonType: BUTTON_TYPES_CLASSES.google,\n          onClick: signInWithGoogle,\n          type: \"submit\",\n          children: \"Google Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignInform, \"+vG4hxB0oI88WeE0uGfqhR+TWzY=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SignInform;\nexport default SignInform;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInform\");","map":{"version":3,"sources":["/Users/robhyrk/Documents/dev/courses/crwn-clothing-v2/src/components/sign-in-form/sign-in-form.component.jsx"],"names":["useState","FormInput","Button","BUTTON_TYPES_CLASSES","useDispatch","signInUserWithEmailAndPassword","googleSignInStart","defaultFormFields","email","password","SignInform","dispatch","formFields","setFormFields","resetFormFields","handleSubmit","event","preventDefault","user","console","log","err","code","alert","handleChange","name","value","target","signInWithGoogle","google"],"mappings":"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","sourcesContent":["import {useState} from 'react'\nimport FormInput from '../form-input/form-input.component'\nimport Button, {BUTTON_TYPES_CLASSES} from '../button/button.component'\nimport './sign-in-form.styles.scss'\nimport { useDispatch } from 'react-redux'\nimport { signInUserWithEmailAndPassword} from '../../utils/firebase/firebase.utils'\nimport { googleSignInStart } from '../../store/user/user.action'\n\nconst defaultFormFields = {\n    email: '',\n    password: '',\n}\n\nconst SignInform = () => {\n    const dispatch = useDispatch()\n    const [formFields, setFormFields] = useState(defaultFormFields)\n    const {email, password} = formFields   \n\n    const resetFormFields = () => {\n        setFormFields(defaultFormFields)\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n\n        try {\n            const {user} = await signInUserWithEmailAndPassword(email, password)\n            console.log(user)\n            resetFormFields()\n        } catch(err) {\n            switch(err.code) {\n                case \"auth/wrong-password\":\n                    alert(\"incorrect password\")\n                    break\n                case \"auth/user-not-found\":\n                    alert(\"no user associated with this email\")\n                    break\n                default:\n                    console.log(err)\n            }\n        }\n    }\n    \n    const handleChange = (event) => {\n        const {name, value} = event.target\n\n        setFormFields({...formFields, [name]:value})\n    }\n\n    const signInWithGoogle = async () => {\n         dispatch(googleSignInStart())\n    }\n\n    return(\n        <div className='sign-up-container'>\n            <h2>Already have an account?</h2>\n            <span>Sign in with your email and password</span>\n            <form onSubmit={handleSubmit}>\n                <FormInput label=\"Email\"  type=\"email\" required name=\"email\" onChange={handleChange} value={email}/>\n                \n                <FormInput label=\"Password\"  type=\"password\" required name=\"password\" onChange={handleChange} value={password}/>\n                <div className='buttons-container'>\n                    <Button onClick={(event)=>handleSubmit(event)} type=\"submit\">Sign In</Button>\n                    <Button buttonType={BUTTON_TYPES_CLASSES.google} onClick={signInWithGoogle} type=\"submit\">Google Sign In</Button>\n                </div>        \n            </form>\n        </div>\n    )\n}\n\nexport default SignInform"]},"metadata":{},"sourceType":"module"}