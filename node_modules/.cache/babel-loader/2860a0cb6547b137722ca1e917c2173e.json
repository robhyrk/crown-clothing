{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport { USER_ACTION_TYPES } from \"./user.types\";\nimport { signInFailed } from \"./user.action\";\nimport { getCurrentUser, createUserDocumentFromAuth } from \"../../utils/firebase/firebase.utils\";\nexport function* getSnapShotFromUserAuth(userAuth, additionalDetails) {\n  try {\n    const userSnapshot = yield call(createUserDocumentFromAuth, userAuth, additionalDetails);\n    console.log(userSnapshot.data());\n  } catch (err) {\n    yield put(signInFailed(err));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield call(getCurrentUser);\n    if (!userAuth) return;\n    yield call(getSnapShotFromUserAuth, userAuth);\n  } catch (err) {\n    yield put(signInFailed(err));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(USER_ACTION_TYPES.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* userSagas() {\n  yield all([call(onCheckUserSession)]);\n}","map":{"version":3,"sources":["/Users/robhyrk/Documents/dev/courses/crwn-clothing-v2/src/store/user/user.saga.js"],"names":["takeLatest","put","all","call","USER_ACTION_TYPES","signInFailed","getCurrentUser","createUserDocumentFromAuth","getSnapShotFromUserAuth","userAuth","additionalDetails","userSnapshot","console","log","data","err","isUserAuthenticated","onCheckUserSession","CHECK_USER_SESSION","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,SAASC,iBAAT,QAAkC,cAAlC;AACA,SAASC,YAAT,QAA6B,eAA7B;AAEA,SAASC,cAAT,EAAyBC,0BAAzB,QAA2D,qCAA3D;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4CC,iBAA5C,EAA+D;AAClE,MAAI;AACA,UAAMC,YAAY,GAAG,MAAMR,IAAI,CAACI,0BAAD,EAA6BE,QAA7B,EAAuCC,iBAAvC,CAA/B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,YAAY,CAACG,IAAb,EAAZ;AACH,GAHD,CAGE,OAAMC,GAAN,EAAW;AACT,UAAMd,GAAG,CAACI,YAAY,CAACU,GAAD,CAAb,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,mBAAV,GAA+B;AAClC,MAAI;AACA,UAAMP,QAAQ,GAAG,MAAMN,IAAI,CAACG,cAAD,CAA3B;AACA,QAAG,CAACG,QAAJ,EAAc;AACd,UAAMN,IAAI,CAACK,uBAAD,EAA0BC,QAA1B,CAAV;AACH,GAJD,CAIE,OAAMM,GAAN,EAAU;AACR,UAAMd,GAAG,CAACI,YAAY,CAACU,GAAD,CAAb,CAAT;AACH;AACJ;AAED,OAAO,UAAUE,kBAAV,GAA+B;AAClC,QAAMjB,UAAU,CAACI,iBAAiB,CAACc,kBAAnB,EAAuCF,mBAAvC,CAAhB;AACH;AAED,OAAO,UAAUG,SAAV,GAAsB;AACzB,QAAMjB,GAAG,CAAC,CAACC,IAAI,CAACc,kBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport { USER_ACTION_TYPES } from \"./user.types\";\nimport { signInFailed } from \"./user.action\";\n\nimport { getCurrentUser, createUserDocumentFromAuth } from \"../../utils/firebase/firebase.utils\";\n\nexport function* getSnapShotFromUserAuth(userAuth, additionalDetails) {\n    try {\n        const userSnapshot = yield call(createUserDocumentFromAuth, userAuth, additionalDetails)\n        console.log(userSnapshot.data())\n    } catch(err) {\n        yield put(signInFailed(err))\n    }\n}\n\nexport function* isUserAuthenticated(){\n    try {\n        const userAuth = yield call(getCurrentUser)\n        if(!userAuth) return\n        yield call(getSnapShotFromUserAuth, userAuth)\n    } catch(err){\n        yield put(signInFailed(err))\n    }\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(USER_ACTION_TYPES.CHECK_USER_SESSION, isUserAuthenticated)\n}\n\nexport function* userSagas() {\n    yield all([call(onCheckUserSession)])\n}"]},"metadata":{},"sourceType":"module"}