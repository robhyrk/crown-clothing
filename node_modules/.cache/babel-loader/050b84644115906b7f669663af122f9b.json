{"ast":null,"code":"import { takeLatest, all, call, put } from 'redux-saga/effects';\nimport { getCategoriesAndDocuments } from '../../utils/firebase/firebase.utils';\nimport { fetchCategoriesSuccess, fetchCategoriesFailed } from './category.action';\nimport { CATEGORIES_ACTION_TYPES } from './category.types';\nexport function* fetchCategoriesAsync() {\n  try {\n    const categoriesArray = yield call(getCategoriesAndDocuments, 'categories');\n    yield put(fetchCategoriesSuccess(categoriesArray));\n  } catch (err) {\n    yield put(fetchCategoriesFailed(err));\n  }\n}\nexport function* onFetchCategories() {\n  yield takeLatest(CATEGORIES_ACTION_TYPES.FETCH_CATEGORIES_START, fetchCategoriesAsync);\n}\nexport function* categoriesSaga() {\n  yield all([call(onFetchCategories)]);\n}","map":{"version":3,"sources":["/Users/robhyrk/Documents/dev/courses/crwn-clothing-v2/src/store/categories/category.saga.js"],"names":["takeLatest","all","call","put","getCategoriesAndDocuments","fetchCategoriesSuccess","fetchCategoriesFailed","CATEGORIES_ACTION_TYPES","fetchCategoriesAsync","categoriesArray","err","onFetchCategories","FETCH_CATEGORIES_START","categoriesSaga"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,GAA/B,QAAyC,oBAAzC;AAEA,SAASC,yBAAT,QAA0C,qCAA1C;AACA,SAASC,sBAAT,EAAiCC,qBAAjC,QAA8D,mBAA9D;AACA,SAASC,uBAAT,QAAwC,kBAAxC;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACpC,MAAI;AACA,UAAMC,eAAe,GAAG,MAAMP,IAAI,CAACE,yBAAD,EAA2B,YAA3B,CAAlC;AACA,UAAMD,GAAG,CAACE,sBAAsB,CAACI,eAAD,CAAvB,CAAT;AACH,GAHD,CAGE,OAAMC,GAAN,EAAW;AACT,UAAMP,GAAG,CAACG,qBAAqB,CAACI,GAAD,CAAtB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,iBAAV,GAA8B;AACjC,QAAMX,UAAU,CAACO,uBAAuB,CAACK,sBAAzB,EAAiDJ,oBAAjD,CAAhB;AACH;AAED,OAAO,UAAUK,cAAV,GAA2B;AAC9B,QAAMZ,GAAG,CAAC,CAACC,IAAI,CAACS,iBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest, all, call, put} from 'redux-saga/effects'\n\nimport { getCategoriesAndDocuments } from '../../utils/firebase/firebase.utils'\nimport { fetchCategoriesSuccess, fetchCategoriesFailed } from './category.action'\nimport { CATEGORIES_ACTION_TYPES } from './category.types'\n\nexport function* fetchCategoriesAsync() {\n    try {\n        const categoriesArray = yield call(getCategoriesAndDocuments,'categories')\n        yield put(fetchCategoriesSuccess(categoriesArray))\n    } catch(err) {\n        yield put(fetchCategoriesFailed(err))\n    }\n}\n\nexport function* onFetchCategories() {\n    yield takeLatest(CATEGORIES_ACTION_TYPES.FETCH_CATEGORIES_START, fetchCategoriesAsync)\n}\n\nexport function* categoriesSaga() {\n    yield all([call(onFetchCategories)])\n}"]},"metadata":{},"sourceType":"module"}