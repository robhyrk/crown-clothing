{"ast":null,"code":"var _jsxFileName = \"/Users/robhyrk/Documents/dev/courses/crwn-clothing-v2/src/context/cart.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? // {...cartItem, quantity: cartItem.quantity + 1}\n    console.log({ ...cartItem\n    }) : cartItem);\n  }\n\n  return [...cartItems, { ...productToAdd,\n    quantity: 1\n  }];\n};\n\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {}\n});\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n\n  const addItemToCart = productToAdd => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    cartItems\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"X7m0wQJ+zlrOgjCUh5u2IGGBLdE=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/robhyrk/Documents/dev/courses/crwn-clothing-v2/src/context/cart.context.jsx"],"names":["createContext","useState","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","console","log","quantity","CartContext","isCartOpen","setIsCartOpen","addItemToCart","CartProvider","children","setCartItems","value"],"mappings":";;;AAAA,SAAQA,aAAR,EAAuBC,QAAvB,QAAsC,OAAtC;;;AAEA,MAAMC,WAAW,GAAG,CAACC,SAAD,EAAYC,YAAZ,KAA6B;AAC7C,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAgBC,QAAD,IAAaA,QAAQ,CAACC,EAAT,KAAgBJ,YAAY,CAACI,EAAzD,CAAzB;;AAEA,MAAGH,gBAAH,EAAqB;AACjB,WAAOF,SAAS,CAACM,GAAV,CAAeF,QAAD,IAAaA,QAAQ,CAACC,EAAT,KAAgBJ,YAAY,CAACI,EAA7B,GAC9B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,EAAC,GAAGJ;AAAJ,KAAZ,CAF8B,GAG5BA,QAHC,CAAP;AAKH;;AAED,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAC,GAAGC,YAAJ;AAAkBQ,IAAAA,QAAQ,EAAE;AAA5B,GAAf,CAAP;AACH,CAZD;;AAcA,OAAO,MAAMC,WAAW,gBAAGb,aAAa,CAAC;AACrCc,EAAAA,UAAU,EAAE,KADyB;AAErCC,EAAAA,aAAa,EAAE,MAAM,CAAE,CAFc;AAGrCZ,EAAAA,SAAS,EAAE,EAH0B;AAIrCa,EAAAA,aAAa,EAAE,MAAM,CAAE;AAJc,CAAD,CAAjC;AAOP,OAAO,MAAMC,YAAY,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACxC,QAAM,CAACJ,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACE,SAAD,EAAYgB,YAAZ,IAA4BlB,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMe,aAAa,GAAIZ,YAAD,IAAkB;AACpCe,IAAAA,YAAY,CAACjB,WAAW,CAACC,SAAD,EAAYC,YAAZ,CAAZ,CAAZ;AACH,GAFD;;AAIA,QAAMgB,KAAK,GAAG;AAACN,IAAAA,UAAD;AAAaC,IAAAA,aAAb;AAA4BC,IAAAA,aAA5B;AAA2Cb,IAAAA;AAA3C,GAAd;AAEA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEiB,KAA7B;AAAA,cAAqCF;AAArC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAXM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import {createContext, useState} from 'react'\n\nconst addCartItem = (cartItems, productToAdd) => {\n    const existingCartItem = cartItems.find((cartItem)=> cartItem.id === productToAdd.id)\n\n    if(existingCartItem) {\n        return cartItems.map((cartItem)=> cartItem.id === productToAdd.id ?\n            // {...cartItem, quantity: cartItem.quantity + 1}\n            console.log({...cartItem})\n            : cartItem\n        )\n    }\n\n    return [...cartItems, {...productToAdd, quantity: 1}]\n}\n\nexport const CartContext = createContext({\n    isCartOpen: false,\n    setIsCartOpen: () => {},\n    cartItems: [],\n    addItemToCart: () => {}\n})\n\nexport const CartProvider = ({children}) => {\n    const [isCartOpen, setIsCartOpen] = useState(false)\n    const [cartItems, setCartItems] = useState([])\n\n    const addItemToCart = (productToAdd) => {\n        setCartItems(addCartItem(cartItems, productToAdd))\n    }\n\n    const value = {isCartOpen, setIsCartOpen, addItemToCart, cartItems}\n\n    return <CartContext.Provider value={value}>{children}</CartContext.Provider>\n}"]},"metadata":{},"sourceType":"module"}