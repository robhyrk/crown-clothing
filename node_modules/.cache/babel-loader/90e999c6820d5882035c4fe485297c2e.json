{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport { USER_ACTION_TYPES } from \"./user.types\";\nimport { signInFailed, signInSuccess } from \"./user.action\";\nimport { getCurrentUser, createUserDocumentFromAuth, signInWithGooglePopup, signInUserWithEmailAndPassword } from \"../../utils/firebase/firebase.utils\";\nexport function* getSnapShotFromUserAuth(userAuth, additionalDetails) {\n  console.log(\"5\");\n\n  try {\n    const userSnapshot = yield call(createUserDocumentFromAuth, userAuth, additionalDetails);\n    console.log(userSnapshot.data());\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (err) {\n    yield put(signInFailed(err));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield call(signInWithGooglePopup);\n    yield call(getSnapShotFromUserAuth, user);\n  } catch (err) {\n    yield put(signInFailed(err));\n  }\n}\nexport function* signInWithEmail(_ref) {\n  let {\n    payload: {\n      email,\n      password\n    }\n  } = _ref;\n  console.log(email, password);\n  console.log(\"4\");\n\n  try {\n    const {\n      user\n    } = yield call(signInUserWithEmailAndPassword, email, password);\n    yield call(getSnapShotFromUserAuth, user);\n  } catch (err) {\n    yield put(signInFailed(err));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield call(getCurrentUser);\n    if (!userAuth) return;\n    yield call(getSnapShotFromUserAuth, userAuth);\n  } catch (err) {\n    yield put(signInFailed(err));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(USER_ACTION_TYPES.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(USER_ACTION_TYPES.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onEmailSignInStart() {\n  console.log(\"3\");\n  yield takeLatest(USER_ACTION_TYPES.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onCheckUserSession), call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/robhyrk/Documents/dev/courses/crwn-clothing-v2/src/store/user/user.saga.js"],"names":["takeLatest","put","all","call","USER_ACTION_TYPES","signInFailed","signInSuccess","getCurrentUser","createUserDocumentFromAuth","signInWithGooglePopup","signInUserWithEmailAndPassword","getSnapShotFromUserAuth","userAuth","additionalDetails","console","log","userSnapshot","data","id","err","signInWithGoogle","user","signInWithEmail","payload","email","password","isUserAuthenticated","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport { USER_ACTION_TYPES } from \"./user.types\";\nimport { signInFailed, signInSuccess } from \"./user.action\";\n\nimport { getCurrentUser, createUserDocumentFromAuth, signInWithGooglePopup, signInUserWithEmailAndPassword } from \"../../utils/firebase/firebase.utils\";\n\nexport function* getSnapShotFromUserAuth(userAuth, additionalDetails) {\n    console.log(\"5\")\n    try {\n        const userSnapshot = yield call(createUserDocumentFromAuth, userAuth, additionalDetails)\n        console.log(userSnapshot.data())\n        yield put(signInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\n    } catch(err) {\n        yield put(signInFailed(err))\n    }\n}\n\nexport function* signInWithGoogle() {\n    try {\n        const {user} = yield call(signInWithGooglePopup)\n        yield call(getSnapShotFromUserAuth, user)\n    } catch(err){\n        yield put(signInFailed(err))\n    }\n}\n\nexport function* signInWithEmail({payload: {email, password}}){\n    console.log(email, password)\n    console.log(\"4\")\n    try {\n        const {user} = yield call(signInUserWithEmailAndPassword, email, password)\n        yield call(getSnapShotFromUserAuth, user)\n    } catch(err) {\n        yield put(signInFailed(err))\n    }\n}\n\nexport function* isUserAuthenticated(){\n    try {\n        const userAuth = yield call(getCurrentUser)\n        if(!userAuth) return\n        yield call(getSnapShotFromUserAuth, userAuth)\n    } catch(err){\n        yield put(signInFailed(err))\n    }\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(USER_ACTION_TYPES.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(USER_ACTION_TYPES.CHECK_USER_SESSION, isUserAuthenticated)\n}\n\nexport function* onEmailSignInStart() {\n    console.log(\"3\")\n    yield takeLatest(USER_ACTION_TYPES.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* userSagas() {\n    yield all([call(onCheckUserSession), call(onGoogleSignInStart), call(onEmailSignInStart)])\n}"]},"metadata":{},"sourceType":"module"}