{"ast":null,"code":"import { CART_ACTION_TYPES } from \"./cart.types\";\nimport { createAction } from '../../utils/reducer/reducer.utils';\nexport const setIsCartOpen = bool => {\n  createAction(CART_ACTION_TYPES.TOGGLE_CART, bool);\n};\n\nconst addCartItem = (cartItems, productToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...productToAdd,\n    quantity: 1\n  }];\n};\n\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};\n\nconst clearCartItem = (cartItems, cartItemToClear) => cartItems.filter(cartItem => cartItem.id !== cartItemToClear.id);\n\nexport const addItemToCart = (cartItems, productToAdd) => {\n  const newCartItems = addCartItem(cartItems, productToAdd);\n  return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, newCartItems);\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const newCartItems = removeCartItem(cartItems, cartItemToRemove);\n  return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, newCartItems);\n};\nexport const clearItemFromCart = (cartItems, cartItemToClear) => {\n  const newCartItems = clearCartItem(cartItems, cartItemToClear);\n  return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, newCartItems);\n};","map":{"version":3,"sources":["/Users/robhyrk/Documents/dev/courses/crwn-clothing-v2/src/store/cart/cart.action.js"],"names":["CART_ACTION_TYPES","createAction","setIsCartOpen","bool","TOGGLE_CART","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","removeCartItem","cartItemToRemove","filter","clearCartItem","cartItemToClear","addItemToCart","newCartItems","SET_CART_ITEMS","removeItemFromCart","clearItemFromCart"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,cAAlC;AACA,SAAQC,YAAR,QAA2B,mCAA3B;AAEA,OAAO,MAAMC,aAAa,GAAIC,IAAD,IAAU;AACnCF,EAAAA,YAAY,CAACD,iBAAiB,CAACI,WAAnB,EAAgCD,IAAhC,CAAZ;AACH,CAFM;;AAIP,MAAME,WAAW,GAAG,CAACC,SAAD,EAAYC,YAAZ,KAA6B;AAC7C,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAgBC,QAAD,IAAaA,QAAQ,CAACC,EAAT,KAAgBJ,YAAY,CAACI,EAAzD,CAAzB;;AAEA,MAAGH,gBAAH,EAAqB;AACjB,WAAOF,SAAS,CAACM,GAAV,CAAeF,QAAD,IAAaA,QAAQ,CAACC,EAAT,KAAgBJ,YAAY,CAACI,EAA7B,GAC9B,EAAC,GAAGD,QAAJ;AAAcG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA5C,KAD8B,GAE5BH,QAFC,CAAP;AAIH;;AAED,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAC,GAAGC,YAAJ;AAAkBM,IAAAA,QAAQ,EAAE;AAA5B,GAAf,CAAP;AACH,CAXD;;AAaA,MAAMC,cAAc,GAAG,CAACR,SAAD,EAAYS,gBAAZ,KAAiC;AACpD,QAAMP,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAgBC,QAAD,IAAaA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAA7D,CAAzB;;AAEA,MAAGH,gBAAgB,CAACK,QAAjB,KAA8B,CAAjC,EAAmC;AAC/B,WAAOP,SAAS,CAACU,MAAV,CAAiBN,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAA9D,CAAP;AACH;;AAED,SAAOL,SAAS,CAACM,GAAV,CAAeF,QAAD,IACjBA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAAjC,GACA,EAAC,GAAGD,QAAJ;AAAcG,IAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA5C,GADA,GAEEH,QAHC,CAAP;AAKH,CAZD;;AAcA,MAAMO,aAAa,GAAG,CAACX,SAAD,EAAYY,eAAZ,KAAgCZ,SAAS,CAACU,MAAV,CAAiBN,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBO,eAAe,CAACP,EAA7D,CAAtD;;AAEA,OAAO,MAAMQ,aAAa,GAAG,CAACb,SAAD,EAAYC,YAAZ,KAA6B;AACtD,QAAMa,YAAY,GAAGf,WAAW,CAACC,SAAD,EAAYC,YAAZ,CAAhC;AACA,SAAON,YAAY,CAACD,iBAAiB,CAACqB,cAAnB,EAAmCD,YAAnC,CAAnB;AACH,CAHM;AAKP,OAAO,MAAME,kBAAkB,GAAG,CAAChB,SAAD,EAAYS,gBAAZ,KAAiC;AAC/D,QAAMK,YAAY,GAAGN,cAAc,CAACR,SAAD,EAAYS,gBAAZ,CAAnC;AACA,SAAOd,YAAY,CAACD,iBAAiB,CAACqB,cAAnB,EAAmCD,YAAnC,CAAnB;AACH,CAHM;AAKP,OAAO,MAAMG,iBAAiB,GAAG,CAACjB,SAAD,EAAYY,eAAZ,KAAgC;AAC7D,QAAME,YAAY,GAAGH,aAAa,CAACX,SAAD,EAAYY,eAAZ,CAAlC;AACA,SAAOjB,YAAY,CAACD,iBAAiB,CAACqB,cAAnB,EAAmCD,YAAnC,CAAnB;AAEH,CAJM","sourcesContent":["import { CART_ACTION_TYPES } from \"./cart.types\";\nimport {createAction} from '../../utils/reducer/reducer.utils'\n\nexport const setIsCartOpen = (bool) => {\n    createAction(CART_ACTION_TYPES.TOGGLE_CART, bool)\n}\n\nconst addCartItem = (cartItems, productToAdd) => {\n    const existingCartItem = cartItems.find((cartItem)=> cartItem.id === productToAdd.id)\n\n    if(existingCartItem) {\n        return cartItems.map((cartItem)=> cartItem.id === productToAdd.id ?\n            {...cartItem, quantity: cartItem.quantity + 1}\n            : cartItem\n        )\n    }\n\n    return [...cartItems, {...productToAdd, quantity: 1}]\n}\n\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n    const existingCartItem = cartItems.find((cartItem)=> cartItem.id === cartItemToRemove.id)\n\n    if(existingCartItem.quantity === 1){\n        return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id)\n    }\n\n    return cartItems.map((cartItem) => \n        cartItem.id === cartItemToRemove.id ?\n        {...cartItem, quantity: cartItem.quantity - 1}\n        : cartItem\n    )\n}\n\nconst clearCartItem = (cartItems, cartItemToClear) => cartItems.filter(cartItem => cartItem.id !== cartItemToClear.id)\n\nexport const addItemToCart = (cartItems, productToAdd) => {\n    const newCartItems = addCartItem(cartItems, productToAdd)\n    return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, newCartItems)\n}\n\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n    const newCartItems = removeCartItem(cartItems, cartItemToRemove)\n    return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, newCartItems)\n}\n\nexport const clearItemFromCart = (cartItems, cartItemToClear) => {\n    const newCartItems = clearCartItem(cartItems, cartItemToClear)\n    return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, newCartItems)\n\n}"]},"metadata":{},"sourceType":"module"}